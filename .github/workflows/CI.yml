name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Build:

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda/envs/test
            python-version: "3.10"

          - os: macos-latest
            label: osx-64
            prefix: /usr/local/miniconda/envs/test
            python-version: "3.10"

          - os: windows-latest
            label: win-64
            prefix: C:\Miniconda3\envs\test
            python-version: "3.10"

    name: LPython CI (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: test
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('ci/environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n test -f ci/environment.yml

      - name: Install Windows Conda Packages
        if: contains(matrix.os, 'windows')
        shell: bash -l {0}
        run: conda install m2-bison=3.0.4 ninja

      - name: Install Linux / macOS Conda Packages
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        shell: bash -l {0}
        run: mamba install bison=3.4

      - name: Conda info
        shell: bash -l {0}
        run: |
            conda info
            conda list

      - name: Setup Platform (Linux)
        if: contains(matrix.os, 'ubuntu')
        shell: bash -l {0}
        run: |
            echo "LFORTRAN_CMAKE_GENERATOR=Unix Makefiles" >> $GITHUB_ENV
            echo "WIN=0" >> $GITHUB_ENV
            echo "MACOS=0" >> $GITHUB_ENV

      - name: Setup Platform (macOS)
        if: contains(matrix.os, 'macos')
        shell: bash -l {0}
        run: |
            echo "LFORTRAN_CMAKE_GENERATOR=Unix Makefiles" >> $GITHUB_ENV
            echo "WIN=0" >> $GITHUB_ENV
            echo "MACOS=1" >> $GITHUB_ENV

      - name: Build and test (Linux / macOS)
        shell: bash -l {0}
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        run: |
            xonsh ci/build.xsh

      - name: Build and test (Windows)
        if: contains(matrix.os, 'windows')
        shell: cmd
        run: |
            set CONDA_INSTALL_LOCN=C:\\Miniconda3
            call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
            call conda activate test
            set LFORTRAN_CMAKE_GENERATOR=Ninja
            set WIN=1
            set MACOS=0
            call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            xonsh ci\build.xsh
